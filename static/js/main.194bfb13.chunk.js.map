{"version":3,"sources":["Views lazy /^/.//.*$/ groupOptions: {} namespace object","serviceWorker.ts","index.tsx","Views/Footer/index.tsx","Config/constants.ts","Assets/Style/Colors.ts","Views/Footer/style.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","loadRoute","route","Element","React","lazy","Footer","Router","fallback","exact","path","component","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","target","rel","Colors","background","primary","secondary","red","green","react","typescript","redux","node","elastic","Container","styled","footer"],"mappings":"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","file":"static/js/main.194bfb13.chunk.js","sourcesContent":["var map = {\n\t\"./Footer\": [\n\t\t4\n\t],\n\t\"./Footer/\": [\n\t\t4\n\t],\n\t\"./Footer/index\": [\n\t\t4\n\t],\n\t\"./Footer/index.tsx\": [\n\t\t4\n\t],\n\t\"./Footer/style\": [\n\t\t9\n\t],\n\t\"./Footer/style.ts\": [\n\t\t9\n\t],\n\t\"./Home\": [\n\t\t10,\n\t\t0,\n\t\t1\n\t],\n\t\"./Home/\": [\n\t\t10,\n\t\t0,\n\t\t1\n\t],\n\t\"./Home/index\": [\n\t\t10,\n\t\t0,\n\t\t1\n\t],\n\t\"./Home/index.tsx\": [\n\t\t10,\n\t\t0,\n\t\t1\n\t],\n\t\"./Home/style\": [\n\t\t24,\n\t\t2\n\t],\n\t\"./Home/style.ts\": [\n\t\t24,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 33;\nmodule.exports = webpackAsyncContext;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Footer from \"Views/Footer\";\n\nimport \"Assets/Style/global.css\";\n\nconst loadRoute = (route: string): React.FC => {\n  const Element = React.lazy(() => import(`Views/${route}`));\n\n  const ElementWithLayout: React.FC = () => (\n    <>\n      <Element />\n      <Footer />\n    </>\n  );\n\n  return ElementWithLayout;\n};\n\nconst Router: React.FC = () => (\n  <Suspense fallback={<div />}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"\" component={loadRoute(\"Home\")} />\n      </Switch>\n    </BrowserRouter>\n  </Suspense>\n);\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n","import React from \"react\";\n\nimport { GITHUB, NAME } from \"Config/constants\";\n\nimport { Container } from \"./style\";\n\nconst Footer: React.FC = () => {\n  return (\n    <Container>\n      <span>\n        Made by{\"  \"}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={GITHUB}>\n          {NAME}\n        </a>\n      </span>\n    </Container>\n  );\n};\n\nexport default Footer;\n","export const NAME = \"Henrique Leite\";\n\nexport const GITHUB = \"https://github.com/henriqueleite42\";\n","const Colors = {\n  background: \"#f1f2f6\",\n  primary: \"#24292e\",\n  secondary: \"#d7d9dc\",\n\n  red: \"#F74164\",\n  green: \"#67e374\",\n\n  react: \"#03d2f9\",\n  typescript: \"#0074c1\",\n  redux: \"#764abc\",\n  node: \"#8cbf3e\",\n  elastic: \"#19bcb1\",\n};\n\nexport type ColorsType = keyof typeof Colors;\n\nexport default Colors;\n","import styled from \"styled-components\";\n\nimport Colors from \"Assets/Style/Colors\";\n\nexport const Container = styled.footer`\n  height: 4em;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${Colors.primary};\n  color: ${Colors.background};\n\n  a {\n    color: ${Colors.background};\n    text-decoration: none;\n\n    &:focus,\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n"],"sourceRoot":""}