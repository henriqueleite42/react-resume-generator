{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react-textarea-autosize/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","../node_modules/react-textarea-autosize/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../src/utils/isHTMLElement.ts","../../src/constants.ts","../../src/logic/attachEventListeners.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isArray.ts","../../src/utils/isObject.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/transformToNestObject.ts","../../src/utils/isUndefined.ts","../../src/utils/unique.ts","../../src/utils/get.ts","../../src/logic/focusOnErrorField.ts","../../src/logic/removeAllEventListeners.ts","../../src/logic/getRadioValue.ts","../../src/utils/isRadioInput.ts","../../src/utils/isFileInput.ts","../../src/utils/isCheckBoxInput.ts","../../src/utils/isMultipleSelect.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/utils/isDetached.ts","../../src/utils/isEmptyObject.ts","../../src/utils/unset.ts","../../src/logic/findRemovedFieldAndRemoveListener.ts","../../src/utils/isString.ts","../../src/logic/getFieldsValues.ts","../../src/utils/isSameError.ts","../../src/logic/shouldRenderBasedOnError.ts","../../src/utils/isRegex.ts","../../src/logic/getValueAndMessage.ts","../../src/utils/isFunction.ts","../../src/utils/isBoolean.ts","../../src/utils/isMessage.ts","../../src/logic/getValidateError.ts","../../src/logic/appendErrors.ts","../../src/logic/validateField.ts","../../src/utils/isPrimitive.ts","../../src/utils/getPath.ts","../../src/logic/assignWatchFields.ts","../../src/logic/skipValidation.ts","../../src/logic/getFieldArrayParentName.ts","../../src/logic/getIsFieldsDifferent.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/isSelectInput.ts","../../src/utils/onDomRemove.ts","../../src/utils/validationModeChecker.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/useForm.ts","../../src/useFormContext.tsx","../node_modules/react-easy-crop/node_modules/tslib/tslib.es6.js","../../src/helpers.ts","../../src/index.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_arrayLikeToArray","len","arr2","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_extends","assign","target","source","index","useLayoutEffect","useLatest","ref","useRef","useIsomorphicLayoutEffect","current","updateRef","useComposedRef","libRef","userRef","prevUserRef","useCallback","instance","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","style","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","TextareaAutosize","_ref","cacheMeasurements","maxRows","minRows","_ref$onChange","onChange","_ref$onHeightChange","onHeightChange","props","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","isControlled","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","window","getComputedStyle","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","Math","max","maxHeight","min","calculateNodeHeight","placeholder","listener","latestListener","useEffect","handler","event","addEventListener","removeEventListener","useWindowResizeListener","forwardRef","_toConsumableArray","arrayLikeToArray","HTMLElement","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","attachEventListeners","field","handleChange","isRadioOrCheckbox","isHTMLElement","isObjectType","isNullOrUndefined","input","replace","match","mathNumber","mathQuote","originalString","set","path","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isObject","data","entries","previous","val","filter","Boolean","defaultValue","unique","split","isUndefined","fields","fieldErrors","get","focus","options","validateWithStateUpdate","defaultReturn","isValid","option","checked","element","defaultResult","validResult","map","attributes","getFieldValue","fieldsRef","unmountFieldsStateRef","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","unset","updatePath","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","isCheckBoxInput","removeAllEventListeners","disconnect","search","output","isString","startsWith","find","types","message","every","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","RegExp","validationData","isRegex","getValidateError","isBoolean","validateAllFieldCriteria","a","required","maxLength","minLength","pattern","validate","isRadio","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","exceedMin","valueDate","valueAsDate","Date","maxLengthValue","minLengthValue","inputLength","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","validateError","validationResult","validateFunction","validateResult","parentPath","getPath","getInnerPath","pathWithIndex","isPrimitive","flat","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","substring","getIsFieldsDifferent","referenceArray","differenceArray","dataA","dataB","isMatchFieldArrayName","searchName","names","some","onDomRemove","onDetachCallback","observer","MutationObserver","observe","childList","subtree","mode","isOnSubmit","isOnAll","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","defaultValues","shouldFocusError","criteriaMode","React.useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","Set","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","React.useState","render","modeChecker","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","reRender","React.useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","previousIsDirty","getValues","getFieldArrayParentName","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","all","setInternalValues","config","parentFieldName","shouldDirty","shouldValidate","setInternalValue","isFieldWatched","renderWatchedInputs","found","size","setValue","getFieldsValues","shouldSkipValidation","skipValidation","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","isEmptyDefaultValue","isEmptyUnmountFields","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","callback","e","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","formState","commonProps","control","validateSchemaIsValid","FormContext","React.createContext","extendStatics","d","b","p","__assign","t","s","getCropSize","mediaWidth","mediaHeight","aspect","rotation","_a","restrictPosition","mediaSize","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","getDistanceBetweenPoints","pointA","pointB","getRotationBetweenPoints","computeCroppedArea","crop","limitAreaFn","croppedAreaPercentages","widthInPixels","heightInPixels","sizePixels","croppedAreaPixels","limitArea","noOp","_max","getInitialCropFromCroppedAreaPixels","mediaZoom","getZoomFromCroppedAreaPixels","cropZoom","getCenter","rotateAroundMidPoint","xMid","yMid","degrees","cos","sin","radian","translateSize","centerX","centerY","outerBounds","minX","maxX","minY","classNames","_this","naturalWidth","naturalHeight","hasWheelJustStarted","clearTimeout","initialCroppedAreaPixels","_b","mediaRef","imageRef","videoRef","Cropper","passive","offsetX","offsetY","requestedPosition","newPosition","point","newZoom","onInteractionStart","onInteractionEnd","zoomPoint","zoomTarget","__","__extends","containerRef","prevProps","center","distance","newRotation","image","video","mediaProps","transform","cropShape","showGrid","_c","containerStyle","cropAreaStyle","mediaStyle","containerClassName","cropAreaClassName","mediaClassName","onMouseDown","onTouchStart","el","className","alt","src","onLoad","onMediaLoad","autoPlay","loop","muted","onLoadedMetadata","controls","maxZoom","minZoom","classes","zoomSpeed","zoomWithScroll","Number","touch"],"mappings":"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","file":"static/js/0.429c5138.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport default useLatest;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useEffect, forwardRef, useRef, useLayoutEffect, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width'];\nvar isIE =  !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n  }\n\n  useWindowResizeListener(resizeTextarea);\n  return (/*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n      onChange: handleChange,\n      ref: ref\n    }))\n  );\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners({\n  field: { ref },\n  handleChange,\n  isRadioOrCheckbox,\n}: {\n  field: Field;\n  isRadioOrCheckbox: boolean;\n  handleChange?: EventListenerOrEventListenerObject;\n}): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter((data) => isObject(data) && !isEmptyObject(data))\n              .length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n  const fields = {\n    ...fieldsRef.current,\n    ...(unmountFieldsStateRef && unmountFieldsStateRef.current),\n  };\n\n  for (const name in fields) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n        unmountFieldsStateRef,\n      );\n    }\n  }\n\n  return output;\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport { FieldValues, InternalFieldName } from '../types/form';\nimport isArray from './isArray';\n\nconst getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return isArray(values)\n    ? values.map((value, key) => getInnerPath(value, key))\n    : Object.entries(values).map(([key, value]) =>\n        getInnerPath(value, key, true),\n      );\n};\n\nexport default <TFieldValues extends FieldValues = FieldValues>(\n  parentPath: InternalFieldName<TFieldValues>,\n  value: TFieldValues,\n) => getPath(parentPath, value).flat(Infinity);\n","import transformToNestObject from './transformToNestObject';\nimport get from '../utils/get';\nimport getPath from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else if (!isUndefined(fieldValues[fieldName])) {\n    value = fieldValues[fieldName];\n  } else {\n    value = get(transformToNestObject(fieldValues), fieldName);\n\n    if (!isUndefined(value)) {\n      getPath<TFieldValues>(fieldName, value).forEach((name: string) =>\n        watchFields.add(name),\n      );\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n}: {\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isReValidateOnBlur: boolean;\n  isReValidateOnChange: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted: boolean;\n}) => {\n  if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isUndefined from '../utils/isUndefined';\nimport isArray from '../utils/isArray';\n\nexport default function getIsFieldsDifferent(\n  referenceArray: unknown[],\n  differenceArray: unknown[],\n) {\n  if (\n    !isArray<any>(referenceArray) ||\n    !isArray<any>(differenceArray) ||\n    referenceArray.length !== differenceArray.length\n  ) {\n    return true;\n  }\n\n  for (let i = 0; i < referenceArray.length; i++) {\n    const dataA = referenceArray[i];\n    const dataB = differenceArray[i];\n\n    if (\n      isUndefined(dataB) ||\n      Object.keys(dataA).length !== Object.keys(dataB).length\n    ) {\n      return true;\n    }\n\n    for (const key in dataA) {\n      if (dataA[key] !== dataB[key]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref, MutationWatcher } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: VoidFunction,\n): MutationWatcher {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport getIsFieldsDifferent from './logic/getIsFieldsDifferent';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const {\n    current: { isOnBlur, isOnSubmit, isOnChange, isOnAll },\n  } = React.useRef(modeChecker(mode));\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = (value as string).includes(\n                  checkboxRef.value,\n                )),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          getIsFieldsDifferent(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      config: SetValueConfig,\n      parentFieldName?: string,\n    ) => {\n      for (const key in value) {\n        const fieldName = `${parentFieldName || name}${\n          isArray(value) ? `[${key}]` : `.${key}`\n        }`;\n        const field = fieldsRef.current[fieldName];\n\n        if (isObject(value[key])) {\n          setInternalValues(name, value[key], config, fieldName);\n        }\n\n        if (field) {\n          setFieldValue(field, value[key]);\n\n          if (config.shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (config.shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      }\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n        return true;\n      }\n\n      unmountFieldsStateRef.current[name] = value;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          name === '' ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation =\n            !isOnAll &&\n            skipValidation({\n              isOnChange,\n              isOnBlur,\n              isBlurEvent,\n              isReValidateOnChange,\n              isReValidateOnBlur,\n              isSubmitted: isSubmittedRef.current,\n            });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolver) {\n            const { errors } = await resolver(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return transformToNestObject(\n      getFieldsValues(fieldsRef, unmountFieldsStateRef),\n    );\n  }\n\n  const validateResolver = React.useCallback(\n    (values = {}) => {\n      resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      ).then(({ errors }) => {\n        const previousFormIsValid = isValidRef.current;\n        isValidRef.current = isEmptyObject(errors);\n\n        if (previousFormIsValid !== isValidRef.current) {\n          reRender();\n        }\n      });\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production' && !ref.name) {\n      // eslint-disable-next-line no-console\n      return console.warn('Missing name @', ref);\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && option.ref === ref;\n          })\n        : ref === field.ref)\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? getFieldValue(fieldsRef, name, unmountFieldsStateRef)\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners({\n        field:\n          isRadioOrCheckbox && field.options\n            ? field.options[field.options.length - 1]\n            : field,\n        isRadioOrCheckbox:\n          isRadioOrCheckbox || isSelectInput(ref as FieldElement),\n        handleChange: handleChangeRef.current,\n      });\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      callback: SubmitHandler<TSubmitFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = {\n        ...unmountFieldsStateRef.current,\n        ...getValues(),\n      };\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await callback(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    fieldsRef.current = {};\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    if (values) {\n      defaultValuesRef.current = values;\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n      fieldsRef.current &&\n        process.env.NODE_ENV === 'production' &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    ...(resolver ? { validateSchemaIsValid: validateResolver } : {}),\n    mode: {\n      isOnBlur,\n      isOnSubmit,\n      isOnChange,\n    },\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotatation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = translateSize(mediaWidth, mediaHeight, rotation)\n\n  if (mediaWidth >= mediaHeight * aspect && width > mediaHeight * aspect) {\n    return {\n      width: mediaHeight * aspect,\n      height: mediaHeight,\n    }\n  }\n\n  if (width > mediaHeight * aspect) {\n    return {\n      width: mediaWidth,\n      height: mediaWidth / aspect,\n    }\n  }\n\n  if (width > height * aspect) {\n    return {\n      width: height * aspect,\n      height: height,\n    }\n  }\n\n  return {\n    width: width,\n    height: width / aspect,\n  }\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = translateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n  return Math.min(maxPosition, Math.max(position, -maxPosition))\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition && rotation === 0 ? limitArea : noOp\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaSize.width) * 100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) / mediaSize.height) * 100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalWidth,\n      (croppedAreaPercentages.width * mediaSize.naturalWidth) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaSize.naturalHeight,\n      (croppedAreaPercentages.height * mediaSize.naturalHeight) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to iamge height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaSize.naturalWidth - sizePixels.width,\n        (croppedAreaPercentages.x * mediaSize.naturalWidth) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaSize.naturalHeight - sizePixels.height,\n        (croppedAreaPercentages.y * mediaSize.naturalHeight) / 100\n      )\n    ),\n  }\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): number {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  if (cropSize) {\n    const isHeightMaxSize = cropSize.height > cropSize.width\n    return isHeightMaxSize\n      ? cropSize.height / mediaZoom / croppedAreaPixels.height\n      : cropSize.width / mediaZoom / croppedAreaPixels.width\n  }\n\n  const aspect = croppedAreaPixels.width / croppedAreaPixels.height\n  const isHeightMaxSize = mediaSize.naturalWidth >= mediaSize.naturalHeight * aspect\n  return isHeightMaxSize\n    ? mediaSize.naturalHeight / croppedAreaPixels.height\n    : mediaSize.naturalWidth / croppedAreaPixels.width\n}\n\n/**\n * Compute the crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize?: Size\n): { crop: Point; zoom: number } {\n  const mediaZoom = mediaSize.width / mediaSize.naturalWidth\n\n  const zoom = getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize)\n\n  const cropZoom = mediaZoom * zoom\n\n  const crop = {\n    x: ((mediaSize.naturalWidth - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y: ((mediaSize.naturalHeight - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) * cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\n/**\n *\n * Returns an x,y point once rotated around xMid,yMid\n */\nexport function rotateAroundMidPoint(\n  x: number,\n  y: number,\n  xMid: number,\n  yMid: number,\n  degrees: number\n): [number, number] {\n  const cos = Math.cos\n  const sin = Math.sin\n  const radian = (degrees * Math.PI) / 180 // Convert to radians\n  // Subtract midpoints, so that midpoint is translated to origin\n  // and add it in the end again\n  const xr = (x - xMid) * cos(radian) - (y - yMid) * sin(radian) + xMid\n  const yr = (x - xMid) * sin(radian) + (y - yMid) * cos(radian) + yMid\n\n  return [xr, yr]\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function translateSize(width: number, height: number, rotation: number): Size {\n  const centerX = width / 2\n  const centerY = height / 2\n\n  const outerBounds = [\n    rotateAroundMidPoint(0, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, 0, centerX, centerY, rotation),\n    rotateAroundMidPoint(width, height, centerX, centerY, rotation),\n    rotateAroundMidPoint(0, height, centerX, centerY, rotation),\n  ]\n\n  const minX = Math.min(...outerBounds.map(p => p[0]))\n  const maxX = Math.max(...outerBounds.map(p => p[0]))\n  const minY = Math.min(...outerBounds.map(p => p[1]))\n  const maxY = Math.max(...outerBounds.map(p => p[1]))\n\n  return { width: maxX - minX, height: maxY - minY }\n}\n\n/**\n * Combine multiple class names into a single string.\n */\nexport function classNames(...args: (boolean | string | number | undefined | void | null)[]) {\n  return args\n    .filter(value => {\n      if (typeof value === 'string' && value.length > 0) {\n        return true\n      }\n\n      return false\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport { Area, MediaSize, Point, Size } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n  classNames,\n} from './helpers'\nimport cssStyles from './styles.css'\n\ntype Props = {\n  image?: string\n  video?: string\n  transform?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  showGrid?: boolean\n  zoomSpeed: number\n  zoomWithScroll?: boolean\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  initialCroppedAreaPixels?: Area\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n  disableAutomaticStylesInjection?: boolean\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\nclass Cropper extends React.Component<Props, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect',\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true,\n  }\n\n  imageRef: HTMLImageElement | null = null\n  videoRef: HTMLVideoElement | null = null\n  containerRef: HTMLDivElement | null = null\n  styleRef: HTMLStyleElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.props.zoomWithScroll &&\n        this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.addEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = document.createElement('style')\n      this.styleRef.setAttribute('type', 'text/css')\n      this.styleRef.innerHTML = cssStyles\n      document.head.appendChild(this.styleRef)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef && this.imageRef.complete) {\n      this.onMediaLoad()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.removeEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (this.styleRef) {\n      this.styleRef.remove()\n    }\n\n    this.cleanEvents()\n    this.props.zoomWithScroll && this.clearScrollEvent()\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    } else if (\n      prevProps.cropSize?.height !== this.props.cropSize?.height ||\n      prevProps.cropSize?.width !== this.props.cropSize?.width\n    ) {\n      this.computeSizes()\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll\n        ? this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n        : this.clearScrollEvent()\n    }\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    document.removeEventListener('mousemove', this.onMouseMove)\n    document.removeEventListener('mouseup', this.onDragStopped)\n    document.removeEventListener('touchmove', this.onTouchMove)\n    document.removeEventListener('touchend', this.onDragStopped)\n  }\n\n  clearScrollEvent = () => {\n    if (this.containerRef) this.containerRef.removeEventListener('wheel', this.onWheel)\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  onMediaLoad = () => {\n    this.computeSizes()\n    this.emitCropData()\n    this.setInitialCrop()\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = () => {\n    const { initialCroppedAreaPixels, cropSize } = this.props\n\n    if (!initialCroppedAreaPixels) {\n      return\n    }\n\n    const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n      initialCroppedAreaPixels,\n      this.mediaSize,\n      cropSize\n    )\n    this.props.onCropChange(crop)\n    this.props.onZoomChange && this.props.onZoomChange(zoom)\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef || this.videoRef\n    if (mediaRef) {\n      this.mediaSize = {\n        width: mediaRef.offsetWidth,\n        height: mediaRef.offsetHeight,\n        naturalWidth: this.imageRef?.naturalWidth || this.videoRef?.videoWidth || 0,\n        naturalHeight: this.imageRef?.naturalHeight || this.videoRef?.videoHeight || 0,\n      }\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            mediaRef.offsetWidth,\n            mediaRef.offsetHeight,\n            this.props.aspect,\n            this.props.rotation\n          )\n      this.setState({ cropSize }, this.recomputeCropPosition)\n    }\n    if (this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mouseup', this.onDragStopped)\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    document.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    document.addEventListener('touchend', this.onDragStopped)\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (this.rafDragTimeout) window.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = window.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) window.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = window.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center)\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const newZoom = this.props.zoom - (e.deltaY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point)\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = window.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point) => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - this.containerRect.left),\n      y: this.containerRect.height / 2 - (y - this.containerRect.top),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const zoomPoint = this.getPointOnContainer(point)\n    const zoomTarget = this.getPointOnMedia(zoomPoint)\n    const newZoom = Math.min(this.props.maxZoom, Math.max(zoom, this.props.minZoom))\n    const requestedPosition = {\n      x: zoomTarget.x * newZoom - zoomPoint.x,\n      y: zoomTarget.y * newZoom - zoomPoint.y,\n    }\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          requestedPosition,\n          this.mediaSize,\n          this.state.cropSize,\n          newZoom,\n          this.props.rotation\n        )\n      : requestedPosition\n\n    this.props.onCropChange(newPosition)\n    this.props.onZoomChange(newZoom)\n  }\n\n  emitCropData = () => {\n    if (!this.state.cropSize) return\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ricardo-ch/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    const { croppedAreaPercentages, croppedAreaPixels } = computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n    this.props.onCropComplete &&\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      transform,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n    } = this.props\n\n    return (\n      <div\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={el => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={classNames('reactEasyCrop_Container', containerClassName)}\n      >\n        {image ? (\n          <img\n            alt=\"\"\n            className={classNames('reactEasyCrop_Image', mediaClassName)}\n            {...(mediaProps as React.ImgHTMLAttributes<HTMLElement>)}\n            src={image}\n            ref={(el: HTMLImageElement) => (this.imageRef = el)}\n            style={{\n              ...mediaStyle,\n              transform:\n                transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <video\n              autoPlay\n              loop\n              muted={true}\n              className={classNames('reactEasyCrop_Video', mediaClassName)}\n              {...mediaProps}\n              src={video}\n              ref={(el: HTMLVideoElement) => (this.videoRef = el)}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform:\n                  transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            />\n          )\n        )}\n        {this.state.cropSize && (\n          <div\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={classNames(\n              'reactEasyCrop_CropArea',\n              cropShape === 'round' && 'reactEasyCrop_CropAreaRound',\n              showGrid && 'reactEasyCrop_CropAreaGrid',\n              cropAreaClassName\n            )}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Cropper\n"],"sourceRoot":""}